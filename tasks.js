/**
 * Задача 1
 * Дан объект. Написать функцию, которая вернет сумму всех чисел в данном объекте.
 * Входной объект - { x: 23, y: 17, n: true, k: 'string', a: [] }
 * Заметка - проверить тип объекта можно инструкцией "typeof"
 * @param {Object}
 * @returns {Number}
 */
const getSum = (obj) => {

};

/**
 * Задача 2
 * Дан объект. Написать функцию isEmpty которая вернет true если объект пуст
 * или false если в объекте есть хотя бы один ключ-значение
 * @param {Object}
 * @returns {Boolean}
 */
const isEmpty = (obj) => {

};

/**
 * Задача 3
 * Реализовать две функции:
 * increase() - увеличивает значение counter на еденицу
 * decrease() - уменьшает значение counter на еденицу
 */
const obj = {
  counter: 0,
  increase() {

  },
  decrease() {

  },
};

/**
 * Задача 4
 * Дан объект и строка (ключ). Написать функцию, которая вернет массив всех значений объекта по заданному ключу
 * Пример:
 * pluck([{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }], 'age'); ---> [36, 40]
 * @param {Object}
 * @returns {Array}
 */
const pluck = (obj1) => {

};

/**
 * Задача 5
 * Дано 2 объекта. Написать функцию которая вернет true если объекты равны по содержимому или 
 * false если не равны. Равны по содержимому значит у обоих объектов ключи и значение равны друг другу.
 * 
 * @param {Object}
 * @param {Object}
 * @returns {Boolean}
 */
const compare = (obj1, obj2) => {

};
